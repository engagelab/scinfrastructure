# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

# Group Services
GET     				/group									controllers.SGroups.fetchAllGroups
POST     				/group									controllers.SGroups.createGroup
GET     				/group/:groupId							controllers.SGroups.fetchGroupById(groupId:String)
GET     				/group/run/:runId						controllers.SGroups.fetchGroupsByRunId(runId:String)






# Member Services
GET     				/member/group/:groupId					controllers.SGroups.fetchGroupMembers(groupId:String)
POST     				/member									controllers.SGroups.addMember






# Postit Services
GET     				/postit/:postitId						controllers.SPostits.fetchPostitById(postitId:String)
GET						/postit/group/:groupId					controllers.SPostits.fetchPostitsByGroupId(groupId:String)
POST     				/postit									controllers.SPostits.addPostit
PUT     				/postit									controllers.SPostits.updatePostitInFlash
PUT     				/web/postit								controllers.SPostits.updatePostitOnWeb
DELETE					/postit/:postitId						controllers.SPostits.deletePostitById(postitId:String)
POST					/comment/postit							controllers.SPostits.postCommentOnPostit






# Video Services
GET     				/video/:videoId							controllers.SVideos.fetchVideoById(videoId:String)
GET						/video/group/:groupId					controllers.SVideos.fetchVideosByGroupId(groupId:String)
POST     				/video									controllers.SVideos.addVideo
PUT     				/video									controllers.SVideos.updateVideoOnWeb
DELETE     				/video/:videoId							controllers.SVideos.deleteVideoById(videoId:String)
POST					/comment/video							controllers.SVideos.postCommentOnVideo






# Image Services
POST     				/image/:groupId							controllers.SImages.addImage(groupId:String)
GET						/image/:imageId							controllers.SImages.showImage(imageId:String)
#PUT     				/image									controllers.SImages.updateImageOnWeb
#DELETE     			/image/:imageId							controllers.SImages.deleteImageById(imageId:String)
#POST					/comment/image							controllers.SImages.postCommentOnImage














# Utilities for debugging server issues
GET     /health                             controllers.Server.health()
GET     /threaddump                         controllers.Server.threaddump()
GET     /servermetrics                      controllers.Server.metrics(classPrefix ?= "", pretty:Boolean ?= true)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.at(path="/public", file)
